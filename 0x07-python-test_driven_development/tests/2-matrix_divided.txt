The ``2-matrix_divided`` module

===============================

Using ``matrix_divided``

-----------------------

First import ``matrix_divided`` from 2-matrix_divided module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

Functionality

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

div = 0

	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

div not an int/float

	>>> print(matrix_divided(matrix, '0'))
	Traceback (most recent call last):
	...
	TypeError: div must be a number

matrix is a tuple

	>>> matrix = (1, 2, 3)
	>>> print(matrix_divided(matrix, 4))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix is a string

	>>> print(matrix_divided("matrix", 4))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

rows aren't of equal length

	>>> matrix = [[1, 2, 3], [4,5]]
	>>> print(matrix_divided(matrix, 4))
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

missing positional arguments:

	>>> print(matrix_divided())
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

element in matrix is not an int/float:

	>>> matrix = [[1, 2, "3"], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 4))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
