The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

	>>> add_integer = __import__('0-add_integer').add_integer

Now use it:

Functionality

	>>> add_integer(3, 4)
	7
	>>> add_integer(-1, -2)
	-3
	>>> add_integer(2)
	100

b is not an int

	>>> add_integer(2, "2")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

a is a boolean

	>>> add_integer(True, 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

a is a complex number

	>>> add_integer(2 + 5j, 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

a is infinite

	>>> add_integer(float('inf'), 2)
	Traceback (most recent call last):
	...
	OverflowError: a is too large

a is None

	>>> add_integer(None, 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

a is Nan

	>>> add_integer(float('nan'), 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

a is missing

	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'
